# Full Security Audit with Docker Compose
# Comprehensive security scan with all scanners enabled
# Usage: docker-compose up
version: '3.8'

services:
  security-scanner:
    image: ghcr.io/your-org/security-scanner:latest
    container_name: security-scanner-full
    volumes:
      # Mount your project directory (read-only)
      - .:/workspace:ro
      # Mount output directory for reports
      - ./security-reports:/app/reports
      # Mount templates and examples
      - ./templates:/app/templates:ro
      - ./examples:/app/examples:ro
      # Optional: Mount Docker socket for container scanning
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - PYTHONPATH=/app
      - SCAN_TARGET=/workspace
      - DOCKER_HOST=unix:///var/run/docker.sock
    command: security-scanner /app/templates/scan-requests/full-security-audit.yaml
    networks:
      - security-scan
    restart: "no"

  # Report viewer web interface
  report-viewer:
    image: nginx:alpine
    container_name: security-report-viewer
    ports:
      - "8080:80"
    volumes:
      - ./security-reports:/usr/share/nginx/html:ro
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - security-scanner
    networks:
      - security-scan
    profiles:
      - viewer

  # Development scanner with hot reload
  dev-scanner:
    image: ghcr.io/your-org/security-scanner:latest
    container_name: security-scanner-dev
    volumes:
      - .:/workspace:ro
      - ./security-reports:/app/reports
      - ./examples/development-workflow.yaml:/app/config/dev-scan.yaml:ro
    environment:
      - PYTHONPATH=/app
    command: >
      sh -c "
      while true; do
        echo 'ðŸ”„ Running development security scan...'
        security-scanner /app/config/dev-scan.yaml
        echo 'âœ… Scan completed. Waiting 300 seconds for next scan...'
        sleep 300
      done
      "
    networks:
      - security-scan
    profiles:
      - dev
    restart: unless-stopped

networks:
  security-scan:
    driver: bridge

# Usage Examples:
#
# 1. Run full security audit:
#    docker-compose up security-scanner
#
# 2. Run with report viewer:
#    docker-compose --profile viewer up
#
# 3. Development mode (continuous scanning):
#    docker-compose --profile dev up dev-scanner
#
# 4. Run all services:
#    docker-compose --profile viewer --profile dev up
#
# View reports at: http://localhost:8080
# Reports are saved to: ./security-reports/